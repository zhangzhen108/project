<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.sdk.mapper.order.ZmMerchantCollectMapper" >
    <resultMap id="BaseResultMap" type="com.project.sdk.dto.order.ZmMerchantCollect" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="collect_id" property="collectId" jdbcType="INTEGER" />
        <result column="creat_time" property="creatTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="status" property="status" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        id, user_id, collect_id, creat_time, update_time, status
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.project.sdk.dto.order.ZmMerchantCollectExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from zm_merchant_collect
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
        <include refid="MySqlPaginationSuffix" />
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from zm_merchant_collect
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from zm_merchant_collect
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.project.sdk.dto.order.ZmMerchantCollectExample" >
        delete from zm_merchant_collect
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.project.sdk.dto.order.ZmMerchantCollect" >
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into zm_merchant_collect (user_id, collect_id, creat_time, 
            update_time, status)
        values (#{userId,jdbcType=INTEGER}, #{collectId,jdbcType=INTEGER}, #{creatTime,jdbcType=TIMESTAMP}, 
            #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.project.sdk.dto.order.ZmMerchantCollect" >
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into zm_merchant_collect
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="userId != null" >
                user_id,
            </if>
            <if test="collectId != null" >
                collect_id,
            </if>
            <if test="creatTime != null" >
                creat_time,
            </if>
            <if test="updateTime != null" >
                update_time,
            </if>
            <if test="status != null" >
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="userId != null" >
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="collectId != null" >
                #{collectId,jdbcType=INTEGER},
            </if>
            <if test="creatTime != null" >
                #{creatTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null" >
                #{status,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.project.sdk.dto.order.ZmMerchantCollectExample" resultType="java.lang.Integer" >
        SELECT COUNT(1) FROM
        <if test="distinct" >
            (SELECT
          DISTINCT
          <include refid="Base_Column_List"/>
          from zm_merchant_collect
          <if test="_parameter != null">
              <include refid="Example_Where_Clause"/>
          </if>) AS COUNT_SQL
        </if>
        <if test="!distinct" >
            
          zm_merchant_collect
          <if test="_parameter != null" >
              <include refid="Example_Where_Clause" />
          </if>

        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update zm_merchant_collect
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null" >
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.collectId != null" >
                collect_id = #{record.collectId,jdbcType=INTEGER},
            </if>
            <if test="record.creatTime != null" >
                creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null" >
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.status != null" >
                status = #{record.status,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update zm_merchant_collect
        set id = #{record.id,jdbcType=INTEGER},
            user_id = #{record.userId,jdbcType=INTEGER},
            collect_id = #{record.collectId,jdbcType=INTEGER},
            creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            status = #{record.status,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.project.sdk.dto.order.ZmMerchantCollect" >
        update zm_merchant_collect
        <set >
            <if test="userId != null" >
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="collectId != null" >
                collect_id = #{collectId,jdbcType=INTEGER},
            </if>
            <if test="creatTime != null" >
                creat_time = #{creatTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.project.sdk.dto.order.ZmMerchantCollect" >
        update zm_merchant_collect
        set user_id = #{userId,jdbcType=INTEGER},
            collect_id = #{collectId,jdbcType=INTEGER},
            creat_time = #{creatTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            status = #{status,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <sql id="MySqlPaginationSuffix" >
        <if test="page != null" >
            <![CDATA[ LIMIT #{page.pageSize} OFFSET #{page.recordIndex}]]>
        </if>
    </sql>
</mapper>